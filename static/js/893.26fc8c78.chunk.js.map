{"version":3,"file":"static/js/893.26fc8c78.chunk.js","mappings":"qPAKaA,EAAS,mCAAG,WAAOC,GAAP,uFAEGC,EAAAA,GAAAA,IAAA,UALX,+BAKW,kBACED,EADF,4BAJZ,qCAMXE,OAAM,SAAAC,GACL,OAAO,IAAIC,MAAMD,EAAME,QACxB,IANoB,cAEjBC,EAFiB,yBAQhBA,GARgB,2CAAH,sD,SCJtB,EAAgC,4BAAhC,EAAsE,sBAAtE,EAAiG,iB,kBCOlF,SAASC,IACpB,IAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAwBA,OArBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAK,mCAAG,oGAENF,EAAU,WAFJ,SAGoBf,EAAUS,GAH9B,OAGAS,EAHA,OAKNH,EAAU,YACVF,EAAQK,EAAYC,KAAKP,MAEzBQ,OAAOC,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAVR,kDAcNX,EAAU,YAdJ,0DAAH,qDAiBXE,GACH,GAAE,CAACR,KAGA,iBAAKkB,UAAWC,EAAhB,WACI,gBAAID,UAAWC,EAAf,UACKhB,GACGA,EAAKiB,KAAI,SAACjB,GAAD,OACL,2BACI,gBACIe,UAAWC,EACXE,IAAKlB,EAAKmB,KACVC,IACIpB,EAAKqB,aAAL,UAtCb,oCAsCa,OACsBrB,EAAKqB,cACrBC,KAGd,uBAAKtB,EAAKmB,QACV,uBAAInB,EAAKuB,cAXJvB,EAAKX,GADT,IAeI,IAAhBW,EAAKwB,SAAgB,uCAEd,YAAXtB,IAAwB,SAACuB,EAAA,EAAD,MAGpC,C","sources":["services/fetchCast.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7ffdfa152a9c960018794573fb7e1fc4'\n\nexport const fetchCast = async (id) => {\n\n  const fetchResult = await axios\n    .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n    .catch(error => {\n      return new Error(error.message);\n    });\n\n  return fetchResult;\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castImg\":\"Cast_castImg__T4WbF\",\"ul\":\"Cast_ul__qE-tu\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { fetchCast } from \"services/fetchCast\";\nimport Loader from \"../Loader/Loader\";\nimport css from '../Cast/Cast.module.css'\nimport defaultImage from '../../default/default-placeholder.png';\nimport PropTypes from 'prop-types';\n\nexport default function Cast() {\n    const IMAGE_PATH = \"https://image.tmdb.org/t/p/w300/\";\n\n    const { moviesId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState('idle');\n\n\n    useEffect(() => {\n        const fetch = async () => {\n            try {\n                setStatus('pending');\n                const fetchMovies = await fetchCast(moviesId);\n\n                setStatus('resolved');\n                setCast(fetchMovies.data.cast);\n\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n\n            } catch (e) {\n                setStatus('rejected');\n            }\n        }\n        fetch()\n    }, [moviesId]);\n\n    return (\n        <div className={css.castContainer}>\n            <ul className={css.ul}>\n                {cast &&\n                    cast.map((cast) => (\n                        <li key={cast.id}>\n                            <img\n                                className={css.castImg}\n                                alt={cast.name}\n                                src={\n                                    cast.profile_path\n                                        ? `${IMAGE_PATH}${cast.profile_path}`\n                                        : defaultImage\n                                }\n                            />\n                            <p >{cast.name}</p>\n                            <p>{cast.character}</p>\n                        </li>\n                    ))}\n                {cast.length === 0 && <p>No casts</p>}\n            </ul>\n            {status === 'pending' && <Loader />}\n        </div>\n    )\n}\n\nCast.propTypes = {\n    cast: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            profile_path: PropTypes.string.isRequired,\n            character: PropTypes.string.isRequired\n        })\n    )\n}"],"names":["fetchCast","id","axios","catch","error","Error","message","fetchResult","Cast","moviesId","useParams","useState","cast","setCast","status","setStatus","useEffect","fetch","fetchMovies","data","window","scrollTo","top","document","documentElement","scrollHeight","behavior","className","css","map","alt","name","src","profile_path","defaultImage","character","length","Loader"],"sourceRoot":""}
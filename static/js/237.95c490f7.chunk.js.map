{"version":3,"file":"static/js/237.95c490f7.chunk.js","mappings":"qPAMaA,EAAW,mCAAG,WAAOC,GAAP,uFAECC,EAAAA,GAAAA,IAAA,UANX,+BAMW,kCALZ,mCAKY,kBACmCD,IAC1DE,OAAM,SAAAC,GACL,OAAO,IAAIC,MAAMD,EAAME,QACxB,IANsB,cAEnBC,EAFmB,yBAQlBA,GARkB,2CAAH,sDCLxB,EAA+B,iCAA/B,EAA6E,+BAA7E,EAAwH,8B,kBCSlHC,GAAmBC,EAAAA,EAAAA,OAAK,kBAC5B,4BAD4B,IAOf,SAASC,IAAU,IAAD,EAE7B,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAAM,UAAGgB,EAAaE,IAAI,iBAApB,QAAiC,GAC7C,GAA4BR,EAAAA,EAAAA,UAAS,QAArC,eAAOS,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACN,GAAKrB,EAAL,CAIA,IAAMsB,EAAmB,mCAAG,oGAEpBF,EAAU,WAFU,SAICrB,EAAYC,GAJb,OAIduB,EAJc,OAMpBH,EAAU,YACVR,EAAiBW,EAAOC,KAAKC,SAE7BC,OAAOC,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAXM,kDAcpBZ,EAAU,YAdU,0DAAH,qDAkBzBE,GApBC,CAqBJ,GAAE,CAACtB,IAWJ,OACI,iBAAKiC,UAAWC,EAAhB,WAEI,kBAAMC,SAVS,SAAAC,GACnBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAOC,SAAS3B,MAA5ByB,MAEArB,EAARqB,EAAwB,CAAEtC,OAAQsC,GAA2B,CAAC,EACjE,EAKO,WACI,kBACIL,UAAWC,EACXO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZ,aAAW,SACXC,KAAK,QACLP,MAAOzB,EACPiC,SAtBO,SAAAV,GAAC,OAAItB,EAASsB,EAAEG,OAAOD,MAAtB,KAuBZ,mBAAQL,UAAWC,EAAeO,KAAK,SAAvC,uBAGH9B,EAAcoC,OAAS,GACpB,4BACI,SAACxC,EAAD,CAAkBI,cAAeA,IACrB,YAAXQ,IAAwB,SAAC6B,EAAA,EAAD,QAE5B,yGAKhB,C","sources":["services/fetchQuery.js","webpack://react-homework-template/./src/pages/Movies/MoviesPage.module.css?251f","pages/Movies/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7ffdfa152a9c960018794573fb7e1fc4'\n\n\nexport const fetchSearch = async (search) => {\n\n  const fetchResult = await axios\n    .get(`${BASE_URL}/search/movie/?api_key=${API_KEY}&query=${search}`)\n    .catch(error => {\n      return new Error(error.message);\n    });\n\n  return fetchResult;\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesSearch\":\"MoviesPage_moviesSearch__TSYQU\",\"searchForm\":\"MoviesPage_searchForm__mw95R\",\"searchBtn\":\"MoviesPage_searchBtn__avbS7\"};","// import { MoviesSearchList } from \"components/MoviesSearchList/MoviesSearchList\";\nimport { useEffect } from \"react\";\nimport { useState , lazy } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchSearch } from '../../services/fetchQuery'\nimport css from '../Movies/MoviesPage.module.css';\n// import toast, { Toaster } from 'react-hot-toast';\nimport Loader from \"components/Loader/Loader\";\n\n\nconst MoviesSearchList = lazy(() =>\n  import(\n    \"../../components/MoviesSearchList/MoviesSearchList\" /* webpackChunkName: \"SearchBarPage\"  */\n  )\n);\n\n\nexport default function Movies() {\n\n    const [movieBySearch, setMovieBySearch] = useState([]);\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const search = searchParams.get('search') ?? '';\n    const [status, setStatus] = useState('idle');\n\n    useEffect(() => {\n        if (!search) {\n            return;\n        }\n\n        const fetchMoviesBySearch = async () => {\n            try {\n                setStatus('pending');\n\n                const movies = await fetchSearch(search);\n\n                setStatus('resolved');\n                setMovieBySearch(movies.data.results);\n\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n            } catch (e) {\n                setStatus('rejected');\n                // return toast.e('upps')\n            }\n        }\n        fetchMoviesBySearch()\n    }, [search]);\n\n    const handelOnChange = e => setQuery(e.target.value)\n\n    const handelOnSubmit = e => {\n        e.preventDefault();\n        const { value } = e.target.elements.query;\n\n        value ? setSearchParams({ search: value }) : setSearchParams({})\n    }\n\n    return (\n        <div className={css.moviesSearch}>\n\n            <form onSubmit={handelOnSubmit} >\n                <input \n                    className={css.searchForm}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movie\"\n                    aria-label=\"search\"\n                    name=\"query\"\n                    value={query}\n                    onChange={handelOnChange} />\n                <button className={css.searchBtn} type=\"submit\">Search</button>\n            </form>\n\n            {movieBySearch.length > 0 ? (\n                <div>\n                    <MoviesSearchList movieBySearch={movieBySearch} />\n                    {status === 'pending' && <Loader />}\n                </div>\n            ) : (<h2>Please write the name of film or check is the entered name of film currect</h2>)}\n\n            {/* <Toaster /> */}\n        </div>\n    )\n}"],"names":["fetchSearch","search","axios","catch","error","Error","message","fetchResult","MoviesSearchList","lazy","Movies","useState","movieBySearch","setMovieBySearch","query","setQuery","useSearchParams","searchParams","setSearchParams","get","status","setStatus","useEffect","fetchMoviesBySearch","movies","data","results","window","scrollTo","top","document","documentElement","scrollHeight","behavior","className","css","onSubmit","e","preventDefault","value","target","elements","type","autoComplete","autoFocus","placeholder","name","onChange","length","Loader"],"sourceRoot":""}
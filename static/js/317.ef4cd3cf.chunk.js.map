{"version":3,"file":"static/js/317.ef4cd3cf.chunk.js","mappings":"sPACA,EAAkC,iCAAlC,EAAwE,oBAAxE,EAAqG,wBAArG,EAAuI,yB,QCI1HA,EAAY,mCAAG,WAAOC,GAAP,uFAEAC,EAAAA,GAAAA,IAAA,UALX,+BAKW,kBACED,EADF,4BAJZ,mCAIY,2BAEvBE,OAAM,SAAAC,GACL,OAAO,IAAIC,MAAMD,EAAME,QACxB,IANuB,cAEpBC,EAFoB,yBAQnBA,GARmB,2CAAH,sD,SCCV,SAASC,IAEpB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAK,mCAAG,oGAENF,EAAU,WAFJ,SAGoBf,EAAaS,GAHjC,OAGAS,EAHA,OAKNH,EAAU,YACVF,EAAWK,EAAYC,KAAKC,SAC5BC,QAAQC,IAAIJ,EAAYC,KAAKI,QAE7BC,OAAOC,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAXR,kDAeNf,EAAU,YAfJ,0DAAH,qDAkBXE,GACH,GAAE,CAACR,KAGA,iBAAKsB,UAAWC,EAAhB,WACI,gBAAID,UAAWC,EAAf,UACKpB,GACGA,EAAQqB,KAAI,SAACrB,GAAD,OACR,2BACI,cAAGmB,UAAWC,EAAd,SAA2BpB,EAAQW,UACnC,cAAGQ,UAAWC,EAAd,SAA4BpB,EAAQsB,YAF/BtB,EAAQX,GADT,IAMI,IAAnBW,EAAQuB,SAAgB,yCAEjB,YAAXrB,IAAwB,SAACsB,EAAA,EAAD,MAGpC,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","services/fetchReviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewContainer\":\"Reviews_reviewContainer__tMkPK\",\"ul\":\"Reviews_ul__ZADe0\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7ffdfa152a9c960018794573fb7e1fc4'\n\nexport const fetchReviews = async (id) => {\n\n  const fetchResult = await axios\n    .get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    .catch(error => {\n      return new Error(error.message);\n    });\n\n  return fetchResult;\n};\n\n\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport Loader from \"../Loader/Loader\";\nimport css from '../Reviews/Reviews.module.css'\nimport { fetchReviews } from \"../../services/fetchReviews\";\n\nexport default function Reviews(){\n\n    const { moviesId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [status, setStatus] = useState('idle');\n\n    useEffect(() => {\n        const fetch = async () => {\n            try {\n                setStatus('pending');\n                const fetchMovies = await fetchReviews(moviesId);\n\n                setStatus('resolved');\n                setReviews(fetchMovies.data.results);\n                console.log(fetchMovies.data.author);\n\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n\n            } catch (e) {\n                setStatus('rejected');\n            }\n        }\n        fetch()\n    }, [moviesId]);\n\n    return (\n        <div className={css.reviewContainer}>\n            <ul className={css.ul}>\n                {reviews &&\n                    reviews.map((reviews) => (\n                        <li key={reviews.id}>\n                            <p className={css.author}>{reviews.author}</p>\n                            <p className={css.content}>{reviews.content}</p>\n                        </li>\n                    ))}\n                {reviews.length === 0 && <p>No reviews</p>}\n            </ul>\n            {status === 'pending' && <Loader />}\n        </div>\n    )\n}"],"names":["fetchReviews","id","axios","catch","error","Error","message","fetchResult","Reviews","moviesId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","fetch","fetchMovies","data","results","console","log","author","window","scrollTo","top","document","documentElement","scrollHeight","behavior","className","css","map","content","length","Loader"],"sourceRoot":""}